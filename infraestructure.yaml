Description: App deploy template v0.1

Resources:
  Ec2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allows HTTP and SSH for EC2
      VpcId: vpc-05df277baf4e93b8b
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId: !GetAtt MySecurityGroupALB.GroupId
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0

  MySecurityGroupALB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Group for application load balancer
      VpcId: vpc-05df277baf4e93b8b
      GroupName: SGP-ALB
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

  MyLoadBalancerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: "LoadBalancerTargetGroup"
      Port: 80
      Protocol: HTTP
      HealthCheckPort: 80
      VpcId: vpc-05df277baf4e93b8b
      TargetType: instance

  MyLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: "LoadBalancer"
      SecurityGroups:
        - !Ref MySecurityGroupALB
      Subnets:
        - subnet-0b17283f1e058ea64
        - subnet-0c54aeebf0a6238ec

  MyLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref MyLoadBalancer
      Protocol: HTTP
      Port: 80
      DefaultActions:
      - Type: forward
        ForwardConfig:
          TargetGroups:
          - TargetGroupArn: !Ref MyLoadBalancerTargetGroup
            Weight: 1
  MyASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: MyAutoScalingGroupName
      TargetGroupARNs:
        - !Ref MyLoadBalancerTargetGroup
      LaunchTemplate: 
        LaunchTemplateId: !Ref MyLaunchTemplate
        Version: !GetAtt MyLaunchTemplate.LatestVersionNumber
      MaxSize: '4'
      MinSize: '2'
      DesiredCapacity: '2'
      VPCZoneIdentifier:
        - subnet-0b17283f1e058ea64
        - subnet-0c54aeebf0a6238ec
      MetricsCollection:
        - Granularity: 1Minute
          Metrics: 
            - GroupMinSize
            - GroupMaxSize
      Tags: 
        - Key: Name
          Value: Hackaton
          PropagateAtLaunch: true

  MyLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: MyLaunchTemplate
      VersionDescription: MyApp Template for Hackaton
      LaunchTemplateData:
        ImageId: ami-080e1f13689e07408
        InstanceType: t2.micro
        KeyName: hackatonAda
        SecurityGroupIds: 
          - !Ref Ec2SecurityGroup
        UserData: 
          Fn::Base64: |
            #!/bin/bash
            sudo apt update -y
            sudo apt install docker.io -y

  MyScalingPolicie:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref MyASG
      PolicyType: TargetTrackingScaling
      EstimatedInstanceWarmup: '10'
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ALBRequestCountPerTarget
          ResourceLabel: !Join 
            - '/' 
            - - !GetAtt MyLoadBalancer.LoadBalancerFullName
              - !GetAtt MyLoadBalancerTargetGroup.TargetGroupFullName
        TargetValue: 1
