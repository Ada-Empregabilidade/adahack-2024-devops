name: Deploy Test
on:
  push:
    branches:
      - main

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: "main"

      - name: Build Image docker
        id: build_docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build and Push"
        uses: docker/build-push-action@v5
        with:
          context: backend/
          push: true
          tags: |
            marcotfm/zoologico-ada:v1
            marcotfm/zoologico-ada:latest

  deploy:
    runs-on: ubuntu-latest
    needs: CI
    steps:
      - name: Checkout code from main branch
        uses: actions/checkout@v2

      - name: Check CloudFormation Changes
        id: cfn_changes
        run: |
          git diff --quiet HEAD^ infraestructure.yaml || echo "CFN changes detected."

      - name: Configure AWS Credentials
        if: steps.cfn_changes.outputs.stdout != ''
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy VPC
        if: steps.cfn_changes.outputs.stdout != ''
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: infraestructure
          template: ./infraestructure.yaml
          no-fail-on-empty-changeset: "1"

      - name: Get EC2 Instance IPs
        id: get_ec2_ips
        run: |
          aws cloudformation describe-stack-resources \
            --stack-name infraestructure \
            --query 'StackResources[?ResourceType==`AWS::EC2::Instance`].PhysicalResourceId' \
            --output text > ec2_ips.txt

      - name: SSH into EC2 and Run Docker
        if: steps.cfn_changes.outputs.stdout == ''
        run: |
          echo ${{ secrets.PRIVATE_KEY }} >> .private-key
          cat ec2_ips.txt | while read ip; do
            ssh -i .private-key ec2-user@$ip 'docker pull marcotfm/zoologico-ada:latest && docker stop container && docker rm container && docker run -d --name container marcotfm/zoologico-ada:latest'
          done
