name: Deploy Test

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'  # Adicionando a pasta backend para monitoramento de alterações

  workflow_dispatch:

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: "main"

      - name: Build Image docker
        id: build_docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build and Push"
        uses: docker/build-push-action@v5
        with:
          context: backend/
          push: true
          tags: |
            marcotfm/zoologico-hackaton:v1
            marcotfm/zoologico-hackaton:latest

  deploy:
    runs-on: ubuntu-latest
    needs: CI
    steps:
      - name: Checkout code from main branch
        uses: actions/checkout@v2   

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update Docker Image on EC2 instances
        run: |
          # Obtendo a ID da pilha do CloudFormation
          stack_name="infraestructure"
          stack_id=$(aws cloudformation describe-stacks --stack-name $stack_name --query 'Stacks[0].StackId' --output text)

          # Obtendo as instâncias EC2 da pilha
          instance_ids=$(aws cloudformation describe-stack-resources --stack-name $stack_id --query 'StackResources[?ResourceType == `AWS::EC2::Instance`].PhysicalResourceId' --output text)

          # Atualizando a imagem Docker em cada instância
          for instance_id in $instance_ids; do
            # Atualizando a imagem Docker
            aws ssm send-command --document-name "AWS-RunShellScript" --targets "Key=instanceids,Values=$instance_id" --parameters commands="docker pull marcotfm/zoologico:latest && docker stop container && docker run -d -p 80:8000 --name container marcotfm/zoologico:latest"
          done
