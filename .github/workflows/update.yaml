name: "Atualizar Ec2"
on:
  push:
    branches:
      - main

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: "main"

      - name: Build Image docker
        id: build_docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build and Push"
        uses: docker/build-push-action@v5
        with:
          context: backend/
          push: true
          tags: |
            marcotfm/zoologico-ada:v1
            marcotfm/zoologico-ada:latest

  deploy:
    runs-on: ubuntu-latest
    outputs:
      ec2_ips: ${{ steps.list_ec2_instances.outputs.ec2_ips }}
    steps:
      - name: Checkout code from main branch
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: List EC2 Instances
        id: list_ec2_instances
        run: |
          ec2_ips=$(aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' --output text)
          echo "::set-output name=ec2_ips::$ec2_ips"

  update_ec2:
    needs: deploy
    runs-on: ubuntu-latest
    env:
      PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
    steps:
      - name: SSH into EC2 and Run Docker Commands
        run: |
          echo "${PRIVATE_KEY}" > .private-key
          IFS=' ' read -r -a ips <<<"${{ needs.deploy.outputs.ec2_ips }}"
          for public_ip in "${ips[@]}"; do
            echo "Connecting to EC2 instance at $public_ip"
            ssh -i .private-key ubuntu@"$public_ip" 'docker pull marcotfm/zoologico-ada:latest && docker stop container && docker rm container && docker run -d --name container marcotfm/zoologico-ada:latest'
          done
